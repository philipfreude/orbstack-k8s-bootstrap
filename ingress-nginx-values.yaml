# Installation:
#
# helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
# helm upgrade --install --namespace ingress-nginx --create-namespace --values ~/tmp/ingress-nginx-values.yaml ingress-nginx ingress-nginx/ingress-nginx

controller:
  config:
    allow-snippet-annotations: true
    use-forwarded-headers: true
    proxy-real-ip-cidr: "173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22,10.42.0.0/16"
    enable-access-log-for-default-backend: "true"
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#variables
    # https://nginx.org/en/docs/http/ngx_http_upstream_module.html#variables
    # https://nginx.org/en/docs/http/ngx_http_geoip_module.html
    log-format-upstream: '{"timestamp": "$time_iso8601_p1.$millisec+$time_iso8601_p2", "requestID": "$req_id", "remoteAddress": "$remote_addr", "remotePort": "$remote_port", "remoteUser": "$remote_user", "httpMethod": "$request_method", "httpHost": "$host", "httpUri": "$request_uri", "httpPath": "$uri", "httpQueryString": "$query_string", "httpStatus": $status, "httpReferrer": "$http_referer", "httpUserAgent": "$http_user_agent", "httpProtocol": "$server_protocol", "httpContentLength": "$content_length", "httpContentType": "$content_type", "https": "$https", "scheme": "$scheme", "requestLength": $request_length, "requestTime": $request_time, "proxyUpstreamName": "$proxy_upstream_name", "proxyAlternativeUpstreamName": "$proxy_alternative_upstream_name", "upstreamAddr": "$upstream_addr", "upstreamBytesReceived": "$upstream_bytes_received", "upstreamBytesSent": "$upstream_bytes_sent", "upstreamCacheStatus": "$upstream_cache_status", "upstreamConnectTime": "$upstream_connect_time", "upstreamResponseLength": "$upstream_response_length", "upstreamResponseTime": "$upstream_response_time", "upstreamStatus": "$upstream_status", "responseBytesSent": $bytes_sent, "responseBodyBytesSent": $body_bytes_sent}'
    # https://thatsamguy.com/nginx-iso8601-time-format/
    http-snippet: |
      map $time_iso8601 $time_iso8601_p1 { ~([^+]+) $1; }
      map $time_iso8601 $time_iso8601_p2 { ~\+([0-9:]+)$ $1; }
      map $msec $millisec { ~\.([0-9]+)$ $1; }
      geo $private_ip {
        default        0;
        10.0.0.0/8     1;
        172.16.0.0/12  1;
        192.168.0.0/16 1;
      }
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - { "key": "app.kubernetes.io/name", "operator": "In", "values": [ "ingress-nginx" ] }
                - { "key": "app.kubernetes.io/instance", "operator": "In", "values": [ "ingress-nginx" ] }
                - { "key": "app.kubernetes.io/component", "operator": "In", "values": [ "controller" ] }
            topologyKey: kubernetes.io/hostname
  service:
    externalTrafficPolicy: Local
    type: LoadBalancer
  replicaCount: 2
  ingressClassResource:
    default: true
revisionHistoryLimit: 5
